"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

import pymysql

pymysql.install_as_MySQLdb()

# Build paths inside the project like this: BASE_DIR / 'subdir'
BASE_DIR = Path(__file__).resolve().parent.parent


def is_online():
    return os.getenv("DJANGO_ONLINE", "0") == "1"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-s1#!-4t6cd88qz1u^l=g^@xc@pzvxs0=0jtqe3%2=x@ixqhndm"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ["0.0.0.0", "localhost", "127.0.0.1",
#                  "go.ai.tianshuo.vip", "new.go.ai.tianshuo.vip"]
ALLOWED_HOSTS = ['*']


# Application definition
CSRF_TRUSTED_ORIGINS = [

]

INSTALLED_APPS = [
    "wx",
    "ai",
    "voice",
    "remoteLog",
    "simpleui",
    "requestStat",
    "monitor",
    "oa",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

PUBLIC_URL = "xxxxx"
INNER_URL = "xxxxxx"
REDIS_DB_INDEX = 2
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        # "LOCATION": f"redis://{PUBLIC_URL if is_local() else INNER_URL}:6379/{REDIS_DB_INDEX}",
        "LOCATION": "redis://%s:%s/%d" % (INNER_URL if is_online() else PUBLIC_URL, 6379, 3),
        "OPTIONS": {
            "PICKLE_VERSION": -1,
            "SERIALIZER": "django_redis.serializers.json.JSONSerializer",
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": "r-uf6curoq6qvfxytjjh:Tianshuo2022"

        },
        "KEY_PREFIX": "ai:django:"
    }
}


CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = "main.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "main.wsgi.application"

DATABASES = {
    "default": {

        "ENGINE": "django.db.backends.mysql",
        "NAME": "xxxxxx",
        "USER": "xxxxxxx",
        "PASSWORD": "xxxxxxxxxxx",
        "HOST": "xxxxxxxxxxx",
        "PORT": 3306,
        'OPTIONS': {
            'init_command': "SET foreign_key_checks = 0;",
        }
    },
    "OPTIONS": {
        # 'read_default_file': os.path.join(BASE_DIR, '/mysql.cnf'),
        "init_command": "SET foreign_key_checks = 0;",
    },
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

# USE_TZ = True

DATETIME_FORMAT = "Y-m-d H:i:s"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"

STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field


DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


WX_APPID = "xxxxxxx"
WX_SECRET = "xxxxxx"

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


BAIDU_TRANSLATE_APPID = "xxxxxxx"
BAIDU_APP_SECRET = "xxxxxxx"

THENEXTLEG_IO_API_TOKEN = "xxxxxxx"


# 设置最大上传文件大小为10MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024
# 最大上传文件大小
FILE_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024


DEFAULT_FILE_STORAGE = 'ai.oss.oss_storage.AIImageStorage'
ACCESS_KEY_ID = 'xxxxxx'
ACCESS_KEY_SECRET = 'xxxxxxx'
END_POINT = 'oss-cn-shanghai.aliyuncs.com'
BUCKET_NAME = 'ai-ts'
ALIYUN_OSS_CNAME = ""
BUCKET_ACL_TYPE = "public-read"  # private, public-read, public-read-write
OSS_CNAME_HOST = f"https://xxxx.xxx.xxxx"

SOUND_APP_KEY = "xxxxx"
